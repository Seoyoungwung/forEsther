<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.forEsther.mapper.unitpricemapper.UnitPriceMapper">

	<!-- 단가 sql -->

	<sql id="criteria">
		<trim suffix="AND">
			<choose>
				<when test="type == 'N'.toString()">
					u.item_name like '%' || #{keyword} || '%'
				</when>
				<when test="type == 'C'.toString()">
					item_code like '%' || #{keyword} || '%'
				</when>
				<when test="type == 'S'.toString()">
					u.serial_lot_code like '%' || #{keyword} || '%'
				</when>
			</choose>
		</trim>
	</sql>

	<!-- 단가 등록 -->
	<insert id="insert">
		<selectKey keyProperty="unit_price_code" order="BEFORE"
			resultType="String">
			SELECT 'UP-' || lpad(nvl(max(substr(unit_price_code, -2,
			2)) + 1, 1), 3, '0')
			FROM tbl_unit_price
		</selectKey>
		INSERT INTO tbl_unit_price (
		UNIT_PRICE_CODE,
		SERIAL_LOT_CODE,
		ITEM_NAME,
		STANDARD_COST,
		PURCHASE_PRICE,
		SELLING_PRICE
		) VALUES(
		#{unit_price_code},
		#{serial_lot_code},
		#{item_name},
		#{standard_cost},
		#{purchase_price},
		#{selling_price}
		)
	</insert>

	<!-- 단가 조회 -->
	<select id="read"
		resultType="com.forEsther.vo.unitpricevo.UnitPriceVO">
		SELECT * FROM tbl_unit_price WHERE unit_price_code =
		#{unit_price_code}
	</select>

	<!-- 단가 리스트 위한 Map -->

	<resultMap id="unitpriceMap"
		type="com.forEsther.vo.unitpricevo.UnitPriceVO">
		<id property="unit_price_code" column="unit_price_code" />
		<result property="serial_lot_code" column="serial_lot_code" />
		<result property="item_name" column="item_name" />
		<result property="standard_cost" column="standard_cost" />
		<result property="purchase_price" column="purchase_price" />
		<result property="selling_price" column="selling_price" />
		<association property="serialLotVO"
			column="serial_lot_code"
			javaType="com.forEsther.vo.seriallotvo.SerialLotVO"
			resultMap="seriallotResult" />
	</resultMap>

	<resultMap id="seriallotResult"
		type="com.forEsther.vo.seriallotvo.SerialLotVO">
		<id property="serial_lot_code" column="serial_lot_code" />
		<result property="item_code" column="item_code" />
	</resultMap>

	<!-- 단가리스트 조회 -->

	<select id="getList" resultMap="unitpriceMap">
 		  <![CDATA[
	  		SELECT rownum, unit_price_code, serial_lot_code, item_code, item_name, standard_cost, purchase_price, selling_price
	  		FROM
	  			(
				    SELECT
				         rownum rn, unit_price_code, u.serial_lot_code, item_code, u.item_name, standard_cost, purchase_price, selling_price
				    FROM
				        tbl_unit_price u, tbl_serial_lot sl
				    WHERE u.serial_lot_code = sl.serial_lot_code
				    AND
	  	]]>
		<include refid="criteria"></include>
		<![CDATA[
			rownum <= #{pageNum} * #{amount}
	  			)
	  		where rn > (#{pageNum} - 1) * #{amount}
  		]]>
	</select>



	<!-- 조회 건수 조회 -->

	<select id="getTotalCount" resultType="int">
		<![CDATA[
			select count(*) from tbl_unit_price u
			where
		]]>
		<include refid="criteria"></include>
		1 = 1
	</select>


	<!-- 단가 수정 -->

	<update id="update">


	</update>

	<!-- 자동 완성 -->
	<select id="autocomplete" parameterType="map" resultType="map">
		SELECT sl.SERIAL_LOT_CODE, sl.ITEM_NAME,
		CASE
			WHEN up.UNIT_PRICE_CODE IS NULL THEN '미등록'
			ELSE '등록완료'
		END AS STATUS
		FROM tbl_serial_lot sl
		LEFT JOIN
			tbl_unit_price up ON sl.SERIAL_LOT_CODE = up.SERIAL_LOT_CODE
		WHERE
			sl.SERIAL_LOT_CODE LIKE  '%'|| #{value} || '%'
		
	</select>
</mapper>
















